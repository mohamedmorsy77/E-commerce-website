{"version":3,"file":"static/js/910.1266a933.chunk.js","mappings":"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","sources":["Components/cart/CartItem.jsx","Components/cart/Cart.jsx"],"sourcesContent":["import { Star } from \"lucide-react\";\r\nimport React, { useMemo } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteProduct, updateProduct } from \"../../network/CartApi\";\r\nimport { PulseLoader } from \"react-spinners\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nexport const rowVariants = {\r\n  hidden: { opacity: 0, x: -200},\r\n  visible: { opacity: 1, x: 0},\r\n  exit: {\r\n    scale: 1,\r\n    x: -500,\r\n    transition: { duration: 0.3, ease: \"easeInOut\" },\r\n  },\r\n};\r\nfunction CartItem({\r\n  product,\r\n  handleDecrease,\r\n  handleIncrease,\r\n  handleConfirmDelete,\r\n  index\r\n}) {\r\n  const { updateCartLoadingIds } = useSelector((state) => state.cart);\r\n  const { deleteCartLoadingIds } = useSelector((state) => state.cart);\r\n  const dispatch = useDispatch();\r\n  const isLoading = useMemo(\r\n    () => updateCartLoadingIds.includes(product._id),\r\n    [product._id, updateCartLoadingIds]\r\n  );\r\n  const LoadingWithDelete = useMemo(\r\n    () => deleteCartLoadingIds.includes(product._id),\r\n\r\n    [product._id, deleteCartLoadingIds]\r\n  );\r\n\r\n  \r\n\r\n  // Deletion\r\n  const handleDelete = (id) => {\r\n    handleConfirmDelete(async () => {\r\n      try {\r\n        const action = await dispatch(deleteProduct(id)).unwrap();\r\n        toast(action?.message || \"Product deleted successfully\", {\r\n          position: \"top-center\",\r\n        });\r\n      } catch (err) {\r\n        toast.error(err?.message || \" Something went wrong\", {\r\n          position: \"top-center\",\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  // update\r\n  const handleUpdate = async (newCount) => {\r\n    try {\r\n      const action = await dispatch(updateProduct(newCount)).unwrap();\r\n      toast(action.message || \"Product updated successfully\", {\r\n        position: \"top-center\",\r\n      });\r\n    } catch (err) {\r\n      toast.error(err?.message || \" Something went wrong\", {\r\n        position: \"top-center\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <motion.tr variants={rowVariants} initial=\"hidden\" animate=\"visible\" exit=\"exit\" transition={{delay: index * 0.08 , duration: 0.1}}  key={product._id} className=\"w-100 border-bottom bg-white rounded-3 \">\r\n      <td colSpan=\"5\" className=\"d-inline-flex align-items-center gap-2\">\r\n        <img\r\n          className=\"cart-image  object-fit-contain\"\r\n          src={product.imageCover}\r\n          alt=\"product-image\"\r\n        />\r\n        <div className=\"cart-info\">\r\n          <p className=\"m-0 text-success \">{product.category.name}</p>\r\n          <span className=\"m-0 d-flex align-items-center gap-2\">\r\n            {product.ratingsAverage}\r\n            <Star\r\n              className=\"w-5 h-5 fs-6 fill-current text-warning \"\r\n              fill=\"currentColor\"\r\n            />\r\n          </span>\r\n        </div>\r\n      </td>\r\n      <td>\r\n        <div className=\"d-flex align-items-center gap-2\">\r\n          <button\r\n            onClick={() => handleDecrease(product._id, product.count)}\r\n            className=\"btn btn-outline-secondary fw-bold btn-sm\"\r\n          >\r\n            -\r\n          </button>\r\n          <span>{product.count}</span>\r\n          <button\r\n            onClick={() => handleIncrease(product._id, product.count)}\r\n            className=\"btn btn-outline-secondary fw-bold btn-sm\"\r\n          >\r\n            +\r\n          </button>\r\n        </div>\r\n      </td>\r\n      <td>\r\n        $\r\n        {product.priceAfterDiscount\r\n          ? product.priceAfterDiscount\r\n          : product.price}\r\n      </td>\r\n      <td>\r\n        <button\r\n          className=\"btn btn-success d-flex align-items-center\"\r\n          onClick={() =>\r\n            handleUpdate({ productId: product._id, count: product.count })\r\n          }\r\n        >\r\n          Update {isLoading && <PulseLoader color=\"#69ca46\" size={5} />}\r\n        </button>\r\n      </td>\r\n      <td>\r\n        <button\r\n          className=\"btn btn-danger\"\r\n          onClick={() => handleDelete(product._id)}\r\n        >\r\n          Delete {LoadingWithDelete && <PulseLoader color=\"#69ca46\" size={5} />}\r\n        </button>\r\n      </td>\r\n    </motion.tr>\r\n  );\r\n}\r\n\r\nexport default CartItem;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { productsSelectors } from \"../../reducers/ProductsSlice\";\r\nimport { cartSelectors, updateProductCount } from \"../../reducers/CartSlice\";\r\nimport CartItem from \"./CartItem\";\r\nimport { toast } from \"react-toastify\";\r\nimport { deleteAllProduct } from \"../../network/CartApi\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport \"./Cart.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AnimatePresence } from \"framer-motion\";\r\nfunction Cart() {\r\n  const navigate = useNavigate();\r\n  const numOfCartItems = useSelector(\r\n    (state) => state.cart.cartInfo?.numOfCartItems || 0\r\n  );\r\n  const totalCartPrice = useSelector(\r\n    (state) => state.cart.cartInfo?.data?.totalCartPrice || 0\r\n  );\r\n\r\n  const products = useSelector(productsSelectors.selectAll);\r\n  const cartItems = useSelector(cartSelectors.selectAll);\r\n  const dispatch = useDispatch();\r\n\r\n  const mergeProduct = cartItems.map((item) => {\r\n    const productInfo = products.find(\r\n      (product) => product?._id === item.product\r\n    );\r\n\r\n    return {\r\n      ...item,\r\n      ...productInfo,\r\n    };\r\n  });\r\n\r\n  const handleIncrease = (productId, newCount) => {\r\n    dispatch(updateProductCount({ productId, newCount: newCount + 1 }));\r\n  };\r\n\r\n  const handleDecrease = (productId, newCount) => {\r\n    if (newCount > 1) {\r\n      dispatch(updateProductCount({ productId, newCount: newCount - 1 }));\r\n    }\r\n  };\r\n\r\n  // handle Confirm Delete\r\n  const handleConfirmDelete = async (callBack) => {\r\n    const result = await Swal.fire({\r\n      title: \"Confirm Deletion\",\r\n      text: \"Are you sure you want to delete?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#d33\",\r\n      cancelButtonColor: \"#3085d6\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    });\r\n    if (result.isConfirmed) {\r\n      callBack();\r\n    }\r\n  };\r\n\r\n  // Delet all items in Cart\r\n  const handleDeleteAllProductInCart = () => {\r\n    handleConfirmDelete(async () => {\r\n      try {\r\n        const action = await dispatch(deleteAllProduct()).unwrap();\r\n        toast(\"All products have been deleted\", {\r\n          position: \"top-center\",\r\n        });\r\n      } catch (err) {\r\n        toast.error(err?.message || \" Something went wrong\", {\r\n          position: \"top-center\",\r\n        });\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <section className=\"cart py-5 px-3  mt-all\">\r\n      \r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-lg-8 mt-4\">\r\n            <div className=\"row  rounded-2 shadow-sm p-2\">\r\n              <div className=\"col-12 d-flex text-md-start justify-content-between align-items-center gap-3 flex-wrap\">\r\n                <h3>\r\n                  Cart{\" \"}\r\n                  <span className=\"text-secondary fs-5\">\r\n                    {numOfCartItems > 0\r\n                      ? `(${numOfCartItems} Items in cart)`\r\n                      : \"Your Cart is Empty\"}\r\n                  </span>\r\n                </h3>\r\n                <button\r\n                  className=\"btn btn-danger   fw-bold fs-6\"\r\n                  onClick={handleDeleteAllProductInCart}\r\n                >\r\n                  x clear cart\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"row mt-3 rounded-2   table-responsive\">\r\n              {mergeProduct.length > 0 ? (\r\n                <table className=\"table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"fw-bold p-2\">Product</th>\r\n                      <th className=\"fw-bold p-2\">count</th>\r\n                      <th className=\"fw-bold p-2\">price</th>\r\n                      <th className=\"fw-bold p-2\">Update</th>\r\n                      <th className=\"fw-bold p-2\">Delete</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <AnimatePresence>\r\n                      {mergeProduct &&\r\n                        mergeProduct.map((product, index) => (\r\n                          <CartItem\r\n                            key={product._id}\r\n                            product={product}\r\n                            handleIncrease={handleIncrease}\r\n                            handleDecrease={handleDecrease}\r\n                            handleConfirmDelete={handleConfirmDelete}\r\n                            index ={index}\r\n                          />\r\n                        ))}\r\n                    </AnimatePresence>\r\n                  </tbody>\r\n                </table>\r\n              ) : (\r\n                <p className=\"fs-1 fw-medium text-bg-light p-4 text-center\">\r\n                  Your Cart Is Empty\r\n                </p>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-lg-4 mt-4\">\r\n            <div className=\"summary p-3 rounded-2  shadow\">\r\n              <h4>Total Price: ${totalCartPrice}</h4>\r\n              <button\r\n                disabled={numOfCartItems === 0}\r\n                className=\"btn btn-dark mt-3 w-100 fw-bold\"\r\n                onClick={() => navigate(\"/checkout\")}\r\n              >\r\n                Continue to checkout\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n"],"names":["rowVariants","hidden","opacity","x","visible","exit","scale","transition","duration","ease","_ref","product","handleDecrease","handleIncrease","handleConfirmDelete","index","updateCartLoadingIds","useSelector","state","cart","deleteCartLoadingIds","dispatch","useDispatch","isLoading","useMemo","includes","_id","LoadingWithDelete","_jsxs","motion","tr","variants","initial","animate","delay","className","children","colSpan","_jsx","src","imageCover","alt","category","name","ratingsAverage","Star","fill","onClick","count","priceAfterDiscount","price","async","action","updateProduct","newCount","unwrap","toast","message","position","err","error","handleUpdate","productId","PulseLoader","color","size","handleDelete","id","deleteProduct","navigate","useNavigate","numOfCartItems","_state$cart$cartInfo","cartInfo","totalCartPrice","_state$cart$cartInfo2","_state$cart$cartInfo3","data","products","productsSelectors","selectAll","cartItems","cartSelectors","mergeProduct","map","item","productInfo","find","updateProductCount","Swal","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","callBack","handleDeleteAllProductInCart","deleteAllProduct","length","AnimatePresence","CartItem","disabled"],"sourceRoot":""}