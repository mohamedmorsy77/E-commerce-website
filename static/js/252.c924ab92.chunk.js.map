{"version":3,"file":"static/js/252.c924ab92.chunk.js","mappings":"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","sources":["Components/cart/CartItem.jsx","Components/cart/Cart.jsx"],"sourcesContent":["import { Star } from \"lucide-react\";\r\nimport React, { useMemo } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteProduct, updateProduct } from \"../../network/CartApi\";\r\nimport { PulseLoader } from \"react-spinners\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nfunction CartItem({\r\n  product,\r\n  handleDecrease,\r\n  handleIncrease,\r\n  handleConfirmDelete,\r\n}) {\r\n  const { updateCartLoadingIds } = useSelector((state) => state.cart);\r\n  const { deleteCartLoadingIds } = useSelector((state) => state.cart);\r\n  const dispatch = useDispatch();\r\n  const isLoading = useMemo(\r\n    () => updateCartLoadingIds.includes(product._id),\r\n    [product._id, updateCartLoadingIds]\r\n  );\r\n  const LoadingWithDelete = useMemo(\r\n    () => deleteCartLoadingIds.includes(product._id),\r\n\r\n    [product._id, deleteCartLoadingIds]\r\n  );\r\n\r\n  \r\n\r\n  // Deletion\r\n  const handleDelete = (id) => {\r\n    handleConfirmDelete(async () => {\r\n      try {\r\n        const action = await dispatch(deleteProduct(id)).unwrap();\r\n        toast(action?.message || \"Product deleted successfully\", {\r\n          position: \"top-center\",\r\n        });\r\n      } catch (err) {\r\n        toast.error(err?.message || \" Something went wrong\", {\r\n          position: \"top-center\",\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  // update\r\n  const handleUpdate = async (newCount) => {\r\n    try {\r\n      const action = await dispatch(updateProduct(newCount)).unwrap();\r\n      toast(action.message || \"Product updated successfully\", {\r\n        position: \"top-center\",\r\n      });\r\n    } catch (err) {\r\n      toast.error(err?.message || \" Something went wrong\", {\r\n        position: \"top-center\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <tr key={product._id} className=\"w-100 border-bottom bg-white rounded-3 \">\r\n      <td colSpan=\"5\" className=\"d-inline-flex align-items-center gap-2\">\r\n        <img\r\n          className=\"cart-image object-fit-contain\"\r\n          src={product.imageCover}\r\n          alt=\"product-image\"\r\n        />\r\n        <div className=\"cart-info\">\r\n          <p className=\"m-0 text-success \">{product.category.name}</p>\r\n          <span className=\"m-0 d-flex align-items-center gap-2\">\r\n            {product.ratingsAverage}\r\n            <Star\r\n              className=\"w-5 h-5 fs-6 fill-current text-warning \"\r\n              fill=\"currentColor\"\r\n            />\r\n          </span>\r\n        </div>\r\n      </td>\r\n      <td>\r\n        <div className=\"d-flex align-items-center gap-2\">\r\n          <button\r\n            onClick={() => handleDecrease(product._id, product.count)}\r\n            className=\"btn btn-outline-secondary fw-bold btn-sm\"\r\n          >\r\n            -\r\n          </button>\r\n          <span>{product.count}</span>\r\n          <button\r\n            onClick={() => handleIncrease(product._id, product.count)}\r\n            className=\"btn btn-outline-secondary fw-bold btn-sm\"\r\n          >\r\n            +\r\n          </button>\r\n        </div>\r\n      </td>\r\n      <td>\r\n        $\r\n        {product.priceAfterDiscount\r\n          ? product.priceAfterDiscount\r\n          : product.price}\r\n      </td>\r\n      <td>\r\n        <button\r\n          className=\"btn btn-success d-flex align-items-center\"\r\n          onClick={() =>\r\n            handleUpdate({ productId: product._id, count: product.count })\r\n          }\r\n        >\r\n          Update {isLoading && <PulseLoader color=\"#69ca46\" size={5} />}\r\n        </button>\r\n      </td>\r\n      <td>\r\n        <button\r\n          className=\"btn btn-danger\"\r\n          onClick={() => handleDelete(product._id)}\r\n        >\r\n          Delete {LoadingWithDelete && <PulseLoader color=\"#69ca46\" size={5} />}\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default CartItem;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { productsSelectors } from \"../../reducers/ProductsSlice\";\r\nimport { cartSelectors, updateProductCount } from \"../../reducers/CartSlice\";\r\nimport CartItem from \"./CartItem\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { deleteAllProduct } from \"../../network/CartApi\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport \"./Cart.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nfunction Cart() {\r\n  const navigate = useNavigate();\r\n  const numOfCartItems = useSelector(\r\n    (state) => state.cart.cartInfo?.numOfCartItems || 0\r\n  );\r\n  const totalCartPrice = useSelector(\r\n    (state) => state.cart.cartInfo?.data?.totalCartPrice || 0\r\n  );\r\n\r\n\r\n  const products = useSelector(productsSelectors.selectAll);\r\n  const cartItems = useSelector(cartSelectors.selectAll);\r\n  const dispatch = useDispatch();\r\n\r\n  const mergeProduct = cartItems.map((item) => {\r\n    const productInfo = products.find(\r\n      (product) => product?._id === item.product\r\n    );\r\n\r\n    return {\r\n      ...item,\r\n      ...productInfo,\r\n    };\r\n  });\r\n\r\n  const handleIncrease = (productId, newCount) => {\r\n    dispatch(updateProductCount({ productId, newCount: newCount + 1 }));\r\n  };\r\n\r\n  const handleDecrease = (productId, newCount) => {\r\n    if (newCount > 1) {\r\n      dispatch(updateProductCount({ productId, newCount: newCount - 1 }));\r\n    }\r\n  };\r\n\r\n  // handle Confirm Delete\r\n  const handleConfirmDelete = async (callBack) => {\r\n    const result = await Swal.fire({\r\n      title: \"Confirm Deletion\",\r\n      text: \"Are you sure you want to delete?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#d33\",\r\n      cancelButtonColor: \"#3085d6\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    });\r\n    if (result.isConfirmed) {\r\n      callBack();\r\n    }\r\n  };\r\n\r\n  // Delet all items in Cart\r\n  const handleDeleteAllProductInCart = () => {\r\n    handleConfirmDelete(async () => {\r\n      try {\r\n        const action = await dispatch(deleteAllProduct()).unwrap();\r\n        toast(\"All products have been deleted\", {\r\n          position: \"top-center\",\r\n        });\r\n      } catch (err) {\r\n        toast.error(err?.message || \" Something went wrong\", {\r\n          position: \"top-center\",\r\n        });\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <section className=\"cart py-5 px-3  mt-all\">\r\n      <ToastContainer />\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-lg-8 mt-4\">\r\n            <div className=\"row  rounded-2 shadow-sm p-2\">\r\n              <div className=\"col-12 d-flex text-md-start justify-content-between align-items-center gap-3 flex-wrap\">\r\n                <h3>\r\n                  Cart{\" \"}\r\n                  <span className=\"text-secondary fs-5\">\r\n                    {numOfCartItems > 0\r\n                      ? `(${numOfCartItems} Items in cart)`\r\n                      : \"Your Cart is Empty\"}\r\n                  </span>\r\n                </h3>\r\n                <button\r\n                  className=\"btn btn-danger   fw-bold fs-6\"\r\n                  onClick={handleDeleteAllProductInCart}\r\n                >\r\n                  x clear cart\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"row mt-3 rounded-2   table-responsive\">\r\n              {mergeProduct.length > 0 ? (\r\n                <table className=\"table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"fw-bold p-2\">Product</th>\r\n                      <th className=\"fw-bold p-2\">count</th>\r\n                      <th className=\"fw-bold p-2\">price</th>\r\n                      <th className=\"fw-bold p-2\">Update</th>\r\n                      <th className=\"fw-bold p-2\">Delete</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {mergeProduct &&\r\n                      mergeProduct.map((product) => (\r\n                        <CartItem\r\n                          key={product._id}\r\n                          product={product}\r\n                          handleIncrease={handleIncrease}\r\n                          handleDecrease={handleDecrease}\r\n                          handleConfirmDelete={handleConfirmDelete}\r\n                        />\r\n                      ))}\r\n                  </tbody>\r\n                </table>\r\n              ) : (\r\n                <p className=\"fs-1 fw-medium text-bg-light p-4 text-center\">Your Cart Is Empty</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-lg-4 mt-4\">\r\n            <div className=\"summary p-3 rounded-2  shadow\">\r\n              <h4>Total Price: ${totalCartPrice}</h4>\r\n              <button disabled={numOfCartItems === 0} className=\"btn btn-dark mt-3 w-100 fw-bold\" onClick={() => navigate(\"/checkout\")}>\r\n                Continue to checkout\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n"],"names":["_ref","product","handleDecrease","handleIncrease","handleConfirmDelete","updateCartLoadingIds","useSelector","state","cart","deleteCartLoadingIds","dispatch","useDispatch","isLoading","useMemo","includes","_id","LoadingWithDelete","_jsxs","className","children","colSpan","_jsx","src","imageCover","alt","category","name","ratingsAverage","Star","fill","onClick","count","priceAfterDiscount","price","async","action","updateProduct","newCount","unwrap","toast","message","position","err","error","handleUpdate","productId","PulseLoader","color","size","handleDelete","id","deleteProduct","navigate","useNavigate","numOfCartItems","_state$cart$cartInfo","cartInfo","totalCartPrice","_state$cart$cartInfo2","_state$cart$cartInfo3","data","products","productsSelectors","selectAll","cartItems","cartSelectors","mergeProduct","map","item","productInfo","find","updateProductCount","Swal","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","callBack","ToastContainer","handleDeleteAllProductInCart","deleteAllProduct","length","CartItem","disabled"],"sourceRoot":""}