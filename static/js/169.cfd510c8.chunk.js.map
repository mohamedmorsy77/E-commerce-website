{"version":3,"file":"static/js/169.cfd510c8.chunk.js","mappings":"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","sources":["../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/animation/GroupAnimation.mjs","../node_modules/motion-dom/dist/es/animation/GroupAnimationWithThen.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/px-values.mjs","../node_modules/motion-dom/dist/es/stats/animation-count.mjs","../node_modules/motion-dom/dist/es/stats/buffer.mjs","../node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/is-supported.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","../node_modules/motion-dom/dist/es/frameloop/order.mjs","../node_modules/motion-dom/dist/es/frameloop/batcher.mjs","../node_modules/motion-dom/dist/es/frameloop/render-step.mjs","../node_modules/motion-dom/dist/es/frameloop/frame.mjs","../node_modules/motion-dom/dist/es/frameloop/microtask.mjs","../node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/motion-dom/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/motion-utils/dist/es/array.mjs","../node_modules/motion-utils/dist/es/errors.mjs","../node_modules/motion-utils/dist/es/global-config.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/motion-utils/dist/es/subscription-manager.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/motion-utils/dist/es/velocity-per-second.mjs","../node_modules/motion-utils/dist/es/warn-once.mjs","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/html/utils/parse-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/measure.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs"],"sourcesContent":["import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\n\nclass GroupAnimation {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        return Promise.all(this.animations.map((animation) => animation.finished));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupAnimation };\n","import { GroupAnimation } from './GroupAnimation.mjs';\n\nclass GroupAnimationWithThen extends GroupAnimation {\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n}\n\nexport { GroupAnimationWithThen };\n","const pxValues = new Set([\n    // Border props\n    \"borderWidth\",\n    \"borderTopWidth\",\n    \"borderRightWidth\",\n    \"borderBottomWidth\",\n    \"borderLeftWidth\",\n    \"borderRadius\",\n    \"radius\",\n    \"borderTopLeftRadius\",\n    \"borderTopRightRadius\",\n    \"borderBottomRightRadius\",\n    \"borderBottomLeftRadius\",\n    // Positioning props\n    \"width\",\n    \"maxWidth\",\n    \"height\",\n    \"maxHeight\",\n    \"top\",\n    \"right\",\n    \"bottom\",\n    \"left\",\n    // Spacing props\n    \"padding\",\n    \"paddingTop\",\n    \"paddingRight\",\n    \"paddingBottom\",\n    \"paddingLeft\",\n    \"margin\",\n    \"marginTop\",\n    \"marginRight\",\n    \"marginBottom\",\n    \"marginLeft\",\n    // Misc\n    \"backgroundPositionX\",\n    \"backgroundPositionY\",\n]);\n\nexport { pxValues };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(i / (numPoints - 1)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const animation = element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n        pseudoElement,\n    });\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { style } from '../render/dom/style.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { hydrateKeyframes } from './keyframes/hydrate.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\nconst animationMaps = new WeakMap();\nconst animationMapKey = (name, pseudoElement) => `${name}:${pseudoElement}`;\nfunction getAnimationMap(element) {\n    const map = animationMaps.get(element) || new Map();\n    animationMaps.set(element, map);\n    return map;\n}\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation {\n    constructor(options) {\n        /**\n         * If we already have an animation, we don't need to instantiate one\n         * and can just use this as a controls interface.\n         */\n        if (\"animation\" in options) {\n            this.animation = options.animation;\n            return;\n        }\n        const { element, name, keyframes: unresolvedKeyframes, pseudoElement, allowFlatten = false, } = options;\n        let { transition } = options;\n        this.allowFlatten = allowFlatten;\n        /**\n         * Stop any existing animations on the element before reading existing keyframes.\n         *\n         * TODO: Check for VisualElement before using animation state. This is a fallback\n         * for mini animate(). Do this when implementing NativeAnimationExtended.\n         */\n        const animationMap = getAnimationMap(element);\n        const key = animationMapKey(name, pseudoElement || \"\");\n        const currentAnimation = animationMap.get(key);\n        currentAnimation && currentAnimation.stop();\n        /**\n         * TODO: If these keyframes aren't correctly hydrated then we want to throw\n         * run an instant animation.\n         */\n        const keyframes = hydrateKeyframes(element, name, unresolvedKeyframes, pseudoElement);\n        invariant(typeof transition.type !== \"string\", `animateMini doesn't support \"type\" as a string. Did you mean to import { spring } from \"motion\"?`);\n        transition = applyGeneratorOptions(transition);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.removeAnimation = () => animationMap.delete(key);\n        this.animation.onfinish = () => {\n            if (!pseudoElement) {\n                style.set(element, name, getFinalKeyframe(keyframes, transition));\n            }\n            else {\n                this.commitStyles();\n            }\n            this.cancel();\n        };\n        /**\n         * TODO: Check for VisualElement before using animation state.\n         */\n        animationMap.set(key, this);\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n        this.removeAnimation();\n    }\n    stop() {\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        this.commitStyles();\n        this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        this.animation.commitStyles?.();\n    }\n    get duration() {\n        console.log(this.animation.effect?.getComputedTiming());\n        const duration = this.animation.effect?.getComputedTiming().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    get finished() {\n        return this.animation.finished;\n    }\n    flatten() {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline(timeline) {\n        this.animation.timeline = timeline;\n        this.animation.onfinish = null;\n        return noop;\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve).catch(onReject);\n    }\n}\n\nexport { NativeAnimation };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\n\nexport { isWaapiSupportedEasing };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","const stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(target))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(target)) {\n                return;\n            }\n            isPressing.delete(target);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (target instanceof HTMLElement) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { frame } from '../frameloop/frame.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"12.6.3\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","let warning = () => { };\nlet invariant = () => { };\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","const warned = new Set();\nfunction hasWarned(message) {\n    return warned.has(message);\n}\nfunction warnOnce(condition, message, element) {\n    if (condition || warned.has(message))\n        return;\n    console.warn(message);\n    if (element)\n        console.warn(element);\n    warned.add(message);\n}\n\nexport { hasWarned, warnOnce };\n","import { warnOnce } from 'motion-utils';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { parseValueFromTransform, readTransformValue };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { parseValueFromTransform } from '../../html/utils/parse-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { frame } from 'motion-dom';\nimport { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue?.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from 'motion-dom';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        if (!this.options.allowFlatten)\n            return;\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { createGeneratorEasing, supportsLinearEasing, calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = supportsLinearEasing() ? generatorOptions.ease : \"easeOut\";\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { frame, cancelFrame, frameData, time } from 'motion-dom';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration, activeAnimations } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        activeAnimations.mainThread++;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = this.currentTime ?? 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n    get finished() {\n        return this.currentFinishedPromise;\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, startWaapiAnimation, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime ?? this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    get finished() {\n        return this.resolved.animation.finished;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            (name !== \"transform\" || !transformTemplate) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, frame, GroupAnimationWithThen } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupAnimationWithThen([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, setDragLock } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { isCSSVariableName } from '../../render/dom/utils/is-css-variable.mjs';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, frame, activeAnimations } from 'motion-dom';\nimport { SubscriptionManager, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop());\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { motionValue } from 'motion-dom';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { microtask } from 'motion-dom';\nimport { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\n\nexport { updateSVGDimensions };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { frame } from 'motion-dom';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => {\n                updateSVGDimensions(current, renderState);\n                frame.render(() => {\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                    renderSVG(current, renderState);\n                });\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time, frame, cancelFrame, motionValue } from 'motion-dom';\nimport { warnOnce, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { motionValue } from 'motion-dom';\nimport { warnOnce } from 'motion-utils';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"12.6.3\", `Attempting to mix Motion versions ${nextValue.version} with 12.6.3 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { readTransformValue } from './utils/parse-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { frame } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n        this.updateDimensions = () => {\n            if (this.current && !this.renderState.dimensions) {\n                updateSVGDimensions(this.current, this.renderState);\n            }\n        };\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    onBindTransform() {\n        if (this.current && !this.renderState.dimensions) {\n            frame.postRender(this.updateDimensions);\n        }\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n"],"names":["supportsScrollTimeline","memo","undefined","window","ScrollTimeline","GroupAnimation","constructor","animations","this","stop","runAll","filter","Boolean","finished","Promise","all","map","animation","getAll","propName","setAll","newValue","i","length","attachTimeline","timeline","fallback","subscriptions","forEach","cancel","time","speed","startTime","duration","max","Math","methodName","controls","flatten","play","pause","complete","GroupAnimationWithThen","then","onResolve","_onReject","finally","Set","activeAnimations","layout","mainThread","waapi","statsBuffer","value","addProjectionMetrics","isBezierDefinition","easing","Array","isArray","supportsFlags","memoSupports","callback","supportsFlag","memoized","supportsLinearEasing","document","createElement","animate","opacity","e","generateLinearEasing","resolution","arguments","points","numPoints","round","substring","cubicBezierAsString","_ref","a","b","c","d","supportedWaapiEasing","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","element","valueName","keyframes","delay","repeat","repeatType","times","pseudoElement","keyframeOptions","offset","fill","iterations","direction","WeakMap","getValueTransition","transition","key","maxGeneratorDuration","calcGeneratorDuration","generator","state","next","done","Infinity","createGeneratorEasing","options","scale","min","type","progress","millisecondsToSeconds","isGenerator","isWaapiSupportedEasing","every","onfinish","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","stepName","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","numCalls","triggerCallback","has","step","schedule","queue","add","delete","process","frameData","frameloop","push","clear","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","MotionGlobalConfig","useManualTiming","performance","now","keepAlive","immediate","frame","cancelFrame","frameSteps","requestAnimationFrame","noop","microtask","cancelMicrotask","queueMicrotask","clearTime","set","newTime","isDragging","x","y","isDragActive","setDragLock","axis","resolveElements","elementOrSelector","scope","selectorCache","EventTarget","root","current","elements","querySelectorAll","from","setupGesture","gestureAbortController","AbortController","passive","signal","abort","isValidHover","event","pointerType","hover","onHoverStart","eventOptions","onPointerEnter","enterEvent","target","onHoverEnd","onPointerLeave","leaveEvent","removeEventListener","addEventListener","isNodeOrChild","parent","child","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","enableKeyboardPress","focusEvent","currentTarget","handleKeydown","handleKeyup","handleBlur","isValidPressEvent","press","targetOrSelector","onPressStart","targets","cancelEvents","startPress","startEvent","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","HTMLElement","tagName","tabIndex","hasAttribute","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","events","updateAndNotify","v","currentTime","updatedAt","setPrevFrameValue","prev","setCurrent","change","notify","renderRequest","hasAnimated","owner","isNaN","parseFloat","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","SubscriptionManager","unsubscribe","getSize","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","get","getPrevious","getVelocity","velocityPerSecond","start","startAnimation","resolve","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","useIsomorphicLayoutEffect","isBrowser","useLayoutEffect","useEffect","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","LayoutGroupContext","useConstant","ref","useRef","addUniqueItem","arr","item","indexOf","removeItem","index","splice","warning","invariant","skipAnimations","result","any","to","toFromDifference","handler","numSubscriptions","secondsToMilliseconds","seconds","milliseconds","velocity","frameDuration","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","_target","isAnimationControls","getValueState","visualElement","values","resolveVariantFromProps","props","definition","custom","variants","resolveVariant","getProps","transformPropOrder","transformProps","positionalKeys","isKeyframesTarget","setMotionValue","hasValue","getValue","addValue","isMotionValue","addValueToWillChange","willChange","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","instantAnimationState","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","backInOut","anticipate","pow","sin","acos","circInOut","isZeroValueString","test","clamp","number","parse","transform","alpha","default","sanitize","floatRegex","singleColorRegex","isColorString","testProp","startsWith","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","name","slice","defaultValue","functionRegex","functions","join","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","z","perspective","transformPerspective","originX","originY","originZ","int","numberValueTypes","zIndex","size","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","radToDeg","rad","PI","angle","atan2","rebaseAngle","matrix2dParsers","atan","sqrt","matrix3dParsers","defaultTransformValue","includes","parseValueFromTransform","matrix3dMatch","parsers","matrix2dMatch","valueParser","convertTransformToNumber","trim","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref2","_ref3","_ref4","_bbox","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","isAsync","isComplete","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","splitCSSVariableRegex","getVariableValue","depth","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","testValueType","dimensionValueTypes","findDimensionValueType","find","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","isNotNull","getFinalKeyframe","resolvedKeyframes","BaseAnimation","autoplay","repeatDelay","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","reject","currentFinishedPromise","allowFlatten","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","_len","transformers","_key","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","calcGeneratorVelocity","resolveValue","prevT","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toTransition","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","applyToOptions","generatorOptions","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","keyframeValues","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","playbackSpeed","pendingPlayState","teardown","onStop","KeyframeResolver$1","onResolved","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","tick","sample","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","supportsWaapi","Element","unsupportedEasingFunctions","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","pendingTimeline","playbackRate","playState","sampleTime","supports","transformTemplate","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","shallowCompare","prevLength","isVariantLabel","variantPriorityOrder","variantProps","numVariantProps","getVariantContext","isControllingVariants","context","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","initialTransition","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","addDomEvent","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","convertBoundingBoxToBox","calcLength","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","createBox","eachAxis","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","isRefObject","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","usePresence","useContext","jsx","applyTo","boxShadow","compareByDepth","FlatTree","children","isDirty","timeout","checkElapsed","resolveMotionValue","unwrappedValue","toValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","nodes","calculatedTargetDeltas","calculatedProjections","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","renderState","vars","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","handleHoverEvent","lifecycle","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","_element","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","LazyContext","strict","MotionContext","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","useMotionRef","visualState","externalRef","useCallback","onMount","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","PresenceContext","reducedMotionConfig","visualElementRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","isForcedMotionValue","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","lowercaseSVGElements","isSVGComponent","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","newValues","htmlMotionConfig","updateSVGDimensions","getBBox","renderHTML","setProperty","camelCaseAttributes","renderSVG","_styleProp","setAttribute","scrapeMotionValuesFromProps$1","charAt","layoutProps","svgMotionConfig","needsMeasure","createMotionComponentFactory","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","onBindTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","readTransformValue","computedStyle","SVGVisualElement","updateDimensions","defaultType","getAttribute","motion","createDomVisualElement","useId"],"sourceRoot":""}