{"version":3,"file":"static/js/245.5398072c.chunk.js","mappings":"4JAEA,MAAMA,EAAa,CACfC,KAAM,EACNC,IAAK,GCDT,SAASC,EAAUC,GAAoE,IAA/D,KAAEC,EAAI,OAAEC,EAAM,OAAEC,EAAM,KAAEC,GAAO,EAAK,QAAEC,GAAU,GAAQC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAChF,MAAOG,EAAUC,IAAaC,EAAAA,EAAAA,UAASN,GAevC,OAdAO,EAAAA,EAAAA,YAAU,KACN,IAAKZ,EAAIa,SAAYT,GAAQK,EACzB,OACJ,MAIMK,EAAU,CACZb,KAAOA,GAAQA,EAAKY,cAAYL,EAChCN,SACAC,UAEJ,ODXR,SAAgBY,EAAmBC,GAA6D,IAApD,KAAEf,EAAMC,OAAQe,EAAU,OAAEd,EAAS,QAAQG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACzF,MAAMY,GAAWC,EAAAA,EAAAA,IAAgBJ,GAC3BK,EAAsB,IAAIC,QAyB1BC,EAAW,IAAIC,sBAxBSC,IAC1BA,EAAQC,SAASC,IACb,MAAMC,EAAQP,EAAoBQ,IAAIF,EAAMG,QAK5C,GAAIH,EAAMI,iBAAmBC,QAAQJ,GAErC,GAAID,EAAMI,eAAgB,CACtB,MAAME,EAAWhB,EAAQU,EAAMG,OAAQH,GACf,oBAAbM,EACPZ,EAAoBa,IAAIP,EAAMG,OAAQG,GAGtCV,EAASY,UAAUR,EAAMG,OAEjC,KAC0B,oBAAVF,IACZA,EAAMD,GACNN,EAAoBe,OAAOT,EAAMG,QACrC,GACF,GAE0D,CAC5D5B,OACAgB,aACAmB,UAA6B,kBAAXjC,EAAsBA,EAASP,EAAWO,KAGhE,OADAe,EAASO,SAASY,GAAYf,EAASgB,QAAQD,KACxC,IAAMf,EAASiB,YAC1B,CCvBeC,CAAOxC,EAAIa,SATF4B,KACZ/B,GAAU,GACHN,OAAOI,EAAY,IAAME,GAAU,KAOVI,EAAQ,GAC7C,CAACb,EAAMD,EAAKE,EAAQE,EAAMD,IACtBM,CACX,C,yICMA,QAvBA,SAAkBiC,GAA4B,IAA3B,MAAEC,EAAK,QAAEC,EAAO,MAAEC,GAAMH,EACzC,MAAM1C,GAAM8C,EAAAA,EAAAA,QAAO,MACbrC,GAAWV,EAAAA,EAAAA,GAAUC,EAAK,CAAEI,MAAM,IACxC,OACE2C,EAAAA,EAAAA,KAACC,EAAAA,EAAOC,IAAG,CACTjD,IAAKA,EACLK,QAAS,CAAE6C,QAAS,EAAGC,EAAG,IAC1BC,QAAS3C,EAAW,CAAEyC,QAAS,EAAGC,EAAG,GAAM,CAAED,QAAS,EAAGC,EAAG,IAC5DE,WAAY,CAAEC,MAAe,IAART,EAAcU,KAAM,SAAUC,SAAU,IAC7DC,UAAU,oDAAmDC,UAE7DX,EAAAA,EAAAA,KAAA,OAAKU,UAAU,cAAcb,QAASA,EAAQc,UAC5CX,EAAAA,EAAAA,KAAA,OACEU,UAAU,QACVE,IAAKhB,EAAMiB,MACXC,IAAKlB,EAAMmB,KACXC,QAAQ,YAKlB,ECiBA,QAjCA,WACE,MAAMC,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,GAAgBC,YACrC,QAAEJ,IAAYE,EAAAA,EAAAA,KAAaG,GAAUA,EAAMJ,SAC3CK,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAKjB,OAHA5D,EAAAA,EAAAA,YAAU,KACRyD,GAASI,EAAAA,EAAAA,KAAc,GACtB,CAACJ,KAEFtB,EAAAA,EAAAA,KAAA,WAASU,UAAU,oBAAmBC,UACpCgB,EAAAA,EAAAA,MAAA,OAAKjB,UAAU,gBAAeC,SAAA,EAC5BX,EAAAA,EAAAA,KAAA,OAAKU,UAAU,WAAUC,UACvBX,EAAAA,EAAAA,KAAA,MAAIU,UAAU,mBAAkBC,SAAC,kBAGnCX,EAAAA,EAAAA,KAAA,OAAKU,UAAU,2BAA0BC,SACtCK,EACGY,MAAMC,KAAK,CAAErE,OAAQ,IAAKsE,KAAI,CAACC,EAAGC,KAAMhC,EAAAA,EAAAA,KAACiC,EAAAA,EAAY,GAAMD,KAC3Df,EAAOa,KAAI,CAAClC,EAAOE,KACjBE,EAAAA,EAAAA,KAACkC,EAAS,CAERtC,MAAOA,EACPC,QAASA,IAAM2B,EAAS,kBAAkB5B,EAAW,OACrDE,MAAOA,GAHFF,EAAMuC,aAU7B,C,uDCxBA,QAbA,WACE,OACEnC,EAAAA,EAAAA,KAAA,OAAKU,UAAU,uDAAsDC,UACnEgB,EAAAA,EAAAA,MAAA,OAAKjB,UAAU,qBAAoBC,SAAA,EACjCX,EAAAA,EAAAA,KAAA,OAAKU,UAAU,kDACfV,EAAAA,EAAAA,KAAA,OAAKU,UAAU,gDACfV,EAAAA,EAAAA,KAAA,OAAKU,UAAU,gDACfV,EAAAA,EAAAA,KAAA,OAAKU,UAAU,oDAIvB,C","sources":["../node_modules/framer-motion/dist/es/render/dom/viewport/index.mjs","../node_modules/framer-motion/dist/es/utils/use-in-view.mjs","Components/brands/BrandCard.jsx","Components/brands/Brands.jsx","Components/skeletonCard/SkeletonCard.jsx"],"sourcesContent":["import { resolveElements } from 'motion-dom';\n\nconst thresholds = {\n    some: 0,\n    all: 1,\n};\nfunction inView(elementOrSelector, onStart, { root, margin: rootMargin, amount = \"some\" } = {}) {\n    const elements = resolveElements(elementOrSelector);\n    const activeIntersections = new WeakMap();\n    const onIntersectionChange = (entries) => {\n        entries.forEach((entry) => {\n            const onEnd = activeIntersections.get(entry.target);\n            /**\n             * If there's no change to the intersection, we don't need to\n             * do anything here.\n             */\n            if (entry.isIntersecting === Boolean(onEnd))\n                return;\n            if (entry.isIntersecting) {\n                const newOnEnd = onStart(entry.target, entry);\n                if (typeof newOnEnd === \"function\") {\n                    activeIntersections.set(entry.target, newOnEnd);\n                }\n                else {\n                    observer.unobserve(entry.target);\n                }\n            }\n            else if (typeof onEnd === \"function\") {\n                onEnd(entry);\n                activeIntersections.delete(entry.target);\n            }\n        });\n    };\n    const observer = new IntersectionObserver(onIntersectionChange, {\n        root,\n        rootMargin,\n        threshold: typeof amount === \"number\" ? amount : thresholds[amount],\n    });\n    elements.forEach((element) => observer.observe(element));\n    return () => observer.disconnect();\n}\n\nexport { inView };\n","import { useState, useEffect } from 'react';\nimport { inView } from '../render/dom/viewport/index.mjs';\n\nfunction useInView(ref, { root, margin, amount, once = false, initial = false, } = {}) {\n    const [isInView, setInView] = useState(initial);\n    useEffect(() => {\n        if (!ref.current || (once && isInView))\n            return;\n        const onEnter = () => {\n            setInView(true);\n            return once ? undefined : () => setInView(false);\n        };\n        const options = {\n            root: (root && root.current) || undefined,\n            margin,\n            amount,\n        };\n        return inView(ref.current, onEnter, options);\n    }, [root, ref, margin, once, amount]);\n    return isInView;\n}\n\nexport { useInView };\n","import { useInView , motion} from \"framer-motion\";\r\nimport { useRef } from \"react\";\r\n\r\nfunction BrandCard({ brand, onClick ,index}) {\r\n  const ref = useRef(null);\r\n  const isInView = useInView(ref, { once: false });\r\n  return (\r\n    <motion.div\r\n      ref={ref}\r\n      initial={{ opacity: 0, x: 50 }}\r\n      animate={isInView ? { opacity: 1, x: 0 } : { opacity: 0, x: 50 }}\r\n      transition={{ delay: index * 0.01, ease: \"easeIn\", duration: 0.5 }}\r\n      className=\"col-12 col-sm-6 col-md-4 col-lg-3 mt-3 p-0 p-sm-2\"\r\n    >\r\n      <div className=\"brands-info\" onClick={onClick}>\r\n        <img\r\n          className=\"w-100\"\r\n          src={brand.image}\r\n          alt={brand.name}\r\n          loading=\"lazy\"\r\n        />\r\n      </div>\r\n    </motion.div>\r\n  );\r\n}\r\n\r\nexport default BrandCard;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchBrands } from \"../../network/BrandsApi\";\r\nimport { brandsSelectors } from \"../../reducers/BrandsSlice\";\r\nimport \"./Brands.css\";\r\nimport SkeletonCard from \"../skeletonCard/SkeletonCard\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport BrandCard from \"./BrandCard\";\r\nfunction Brands() {\r\n  const brands = useSelector(brandsSelectors.selectAll);\r\n  const { loading } = useSelector((state) => state.brands);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchBrands());\r\n  }, [dispatch]);\r\n  return (\r\n    <section className=\"brands p-5 mt-all\">\r\n      <div className=\"container p-0\">\r\n        <div className=\"row m-0 \">\r\n          <h1 className=\"text-success p-0\">All Brands</h1>\r\n        </div>\r\n\r\n        <div className=\"row mt-5 overflow-hidden\">\r\n          {loading\r\n            ? Array.from({ length: 8 }).map((_, i) => <SkeletonCard key={i} />)\r\n            : brands.map((brand, index) => (\r\n                <BrandCard\r\n                  key={brand._id}\r\n                  brand={brand}\r\n                  onClick={() => navigate(`/specificBrand/${brand[\"_id\"]}`)}\r\n                  index={index}\r\n                />\r\n              ))}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Brands;\r\n","import React from \"react\";\r\nimport './Skeleton.css'\r\nfunction SkeletonCard() {\r\n  return (\r\n    <div className=\"skeleton-item col-12 col-sm-6 col-md-4 col-xl-3 mt-5\">\r\n      <div className=\"card p-3 rounded-2\">\r\n        <div className=\"skeleton h-200 w-100 mb-3 rounded-2 bg-light\"></div>\r\n        <div className=\"skeleton h-20 w-75 mb-2 rounded-2 bg-light\"></div>\r\n        <div className=\"skeleton h-20 w-50 mb-2 rounded-2 bg-light\"></div>\r\n        <div className=\"skeleton h-20 w-100 mb-2 rounded-2 bg-light\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SkeletonCard;\r\n"],"names":["thresholds","some","all","useInView","ref","root","margin","amount","once","initial","arguments","length","undefined","isInView","setInView","useState","useEffect","current","options","elementOrSelector","onStart","rootMargin","elements","resolveElements","activeIntersections","WeakMap","observer","IntersectionObserver","entries","forEach","entry","onEnd","get","target","isIntersecting","Boolean","newOnEnd","set","unobserve","delete","threshold","element","observe","disconnect","inView","onEnter","_ref","brand","onClick","index","useRef","_jsx","motion","div","opacity","x","animate","transition","delay","ease","duration","className","children","src","image","alt","name","loading","brands","useSelector","brandsSelectors","selectAll","state","dispatch","useDispatch","navigate","useNavigate","fetchBrands","_jsxs","Array","from","map","_","i","SkeletonCard","BrandCard","_id"],"sourceRoot":""}